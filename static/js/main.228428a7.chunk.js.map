{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Cweet.js","components/CweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Cweet","cweetObj","isOwner","editing","setEditing","text","newCweet","setNewCweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","CweetFactory","userObj","cweet","setCweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","cweets","setCweets","useEffect","orderBy","onSnapshot","snapshot","cweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.228428a7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  // React 환경변수 : REACT_APP_~~\n  apiKey: process.env.REACT_APP_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"myBase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"myBase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  // 소셜 로그인\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"myBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Cweet = ({ cweetObj, isOwner }) => {\n  // edit 상태 확인\n  const [editing, setEditing] = useState(false);\n  const [newCweet, setNewCweet] = useState(cweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말 삭제하시겠어요?\");\n    if (ok) {\n      await dbService.doc(`cweets/${cweetObj.id}`).delete();\n      await storageService.refFromURL(cweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await dbService.doc(`cweets/${cweetObj.id}`).update({\n      text: newCweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewCweet(value);\n  };\n\n  return (\n    <div className=\"cweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container cweetEdit\">\n            <input\n              type=\"text\"\n              value={newCweet}\n              required\n              placeholder=\"Edit your Cweet\"\n              onChange={onChange}\n              autoFocus\n              className=\"formInput\"\n            />{\" \"}\n            <input type=\"submit\" value=\"Update Cweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{cweetObj.text}</h4>\n          {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"cweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"myBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst CweetFactory = ({ userObj }) => {\n  const [cweet, setCweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (cweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const cweetObj = {\n      text: cweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    await dbService.collection(\"cweets\").add(cweetObj);\n    setCweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setCweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={cweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"무슨 생각하세요?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"img\"\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default CweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"myBase\";\nimport Cweet from \"components/Cweet\";\nimport CweetFactory from \"components/CweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [cweets, setCweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"cweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const cweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setCweets(cweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <CweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {cweets.map((cweet) => (\n          <Cweet\n            key={cweet.id}\n            cweetObj={cweet}\n            isOwner={cweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"myBase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  // 로그아웃 Hooks\n  const history = useHistory();\n\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      // *photo url 업로드하기\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n            </>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport { authService } from \"myBase\";\nimport AppRouter from \"components/Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // eslint-disable-next-line\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  // firebase 초기화\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}